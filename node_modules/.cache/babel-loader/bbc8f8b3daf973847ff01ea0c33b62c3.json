{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\src\\\\pages\\\\Repository\\\\index.js\";\nimport React, { Component } from \"react\";\nimport api from \"../../services/api\";\n\nvar Repository = /*#__PURE__*/function (_Component) {\n  _inherits(Repository, _Component);\n\n  var _super = _createSuper(Repository);\n\n  function Repository() {\n    _classCallCheck(this, Repository);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Repository, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var match, repoName, _yield$Promise$all, _yield$Promise$all2, repository, issues;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                match = this.props.match;\n                repoName = decodeURIComponent(match.params.repository);\n                _context.next = 4;\n                return Promise.all([api.get(\"http://api.github.com/repos/\".concat(repoName)), api.get(\"http://api.github.com/repos/\".concat(repoName, \"/issues\"))]);\n\n              case 4:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                repository = _yield$Promise$all2[0];\n                issues = _yield$Promise$all2[1];\n                console.log(repository);\n                console.log(issues);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 12\n        }\n      }, \"Repository:s\");\n    }\n  }]);\n\n  return Repository;\n}(Component);\n\nexport { Repository as default };","map":{"version":3,"sources":["C:/Users/Rafael/Documents/projetos/portfolio/repositorios-favoritos/src/pages/Repository/index.js"],"names":["React","Component","api","Repository","match","props","repoName","decodeURIComponent","params","repository","Promise","all","get","issues","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;IAEqBC,U;;;;;;;;;;;;;;;;;;;;;AAETC,gBAAAA,K,GAAU,KAAKC,K,CAAfD,K;AACFE,gBAAAA,Q,GAAWC,kBAAkB,CAACH,KAAK,CAACI,MAAN,CAAaC,UAAd,C;;uBAEAC,OAAO,CAACC,GAAR,CAAY,CAC7CT,GAAG,CAACU,GAAJ,uCAAuCN,QAAvC,EAD6C,EAE7CJ,GAAG,CAACU,GAAJ,uCAAuCN,QAAvC,aAF6C,CAAZ,C;;;;;AAA5BG,gBAAAA,U;AAAYI,gBAAAA,M;AAKnBC,gBAAAA,OAAO,CAACC,GAAR,CAAYN,UAAZ;AACAK,gBAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;;;;;;;;;;;;;;;;;6BAGM;AACN,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD;;;;EAhBqCZ,S;;SAAnBE,U","sourcesContent":["import React, { Component } from \"react\";\r\nimport api from \"../../services/api\";\r\n\r\nexport default class Repository extends Component {\r\n  async componentDidMount(){\r\n    const { match } = this.props; \r\n    const repoName = decodeURIComponent(match.params.repository);\r\n\r\n    const [repository, issues] = await Promise.all([\r\n      api.get(`http://api.github.com/repos/${repoName}`),\r\n      api.get(`http://api.github.com/repos/${repoName}/issues`)\r\n    ]);\r\n\r\n    console.log(repository);\r\n    console.log(issues);\r\n  } \r\n  \r\n  render(){\r\n    return <h1>Repository:s</h1>;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}