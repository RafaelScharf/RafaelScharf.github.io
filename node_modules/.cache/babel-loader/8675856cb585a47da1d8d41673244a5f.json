{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\Rafael\\\\Documents\\\\projetos\\\\portfolio\\\\repositorios-favoritos\\\\src\\\\pages\\\\Repository\\\\index.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport api from \"../../services/api\";\nimport { Link } from \"react-router-dom\";\nimport Container from \"../../components/Container\";\nimport { Loading, Owner, IssueList } from \"./styles\";\n\nvar Repository = /*#__PURE__*/function (_Component) {\n  _inherits(Repository, _Component);\n\n  var _super = _createSuper(Repository);\n\n  function Repository() {\n    var _this;\n\n    _classCallCheck(this, Repository);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      repository: {},\n      issues: [],\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(Repository, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var match, repoName, _yield$Promise$all, _yield$Promise$all2, repository, issues;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                match = this.props.match;\n                repoName = decodeURIComponent(match.params.repository);\n                _context.next = 4;\n                return Promise.all([api.get(\"http://api.github.com/repos/\".concat(repoName)), api.get(\"http://api.github.com/repos/\".concat(repoName, \"/issues\")), {\n                  params: {\n                    state: 'open',\n                    per_page: 5\n                  }\n                }]);\n\n              case 4:\n                _yield$Promise$all = _context.sent;\n                _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 2);\n                repository = _yield$Promise$all2[0];\n                issues = _yield$Promise$all2[1];\n                this.setState({\n                  repository: repository.data,\n                  loading: false,\n                  issues: issues.data\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return /*#__PURE__*/React.createElement(Loading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }\n        }, \" Carregando \");\n      }\n\n      return /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Owner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, \"Voltar aos reposit\\xF3rios\"), /*#__PURE__*/React.createElement(\"img\", {\n        src: repository.owner.avatar_url,\n        alt: repository.owner.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, repository.name), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, repository.description)), /*#__PURE__*/React.createElement(IssueList, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, issues.map(function (issue) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: String(issue.id),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: issue.user.avatar_url,\n          alt: issue.user.login,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: issue.html_url,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }\n        }, issue.title))));\n      })));\n    }\n  }]);\n\n  return Repository;\n}(Component);\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};\nexport { Repository as default };","map":{"version":3,"sources":["C:/Users/Rafael/Documents/projetos/portfolio/repositorios-favoritos/src/pages/Repository/index.js"],"names":["React","Component","PropTypes","api","Link","Container","Loading","Owner","IssueList","Repository","state","repository","issues","loading","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","setState","data","owner","avatar_url","login","name","description","map","issue","String","id","user","html_url","title","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport api from \"../../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport { Loading, Owner, IssueList } from \"./styles\";\r\n\r\nexport default class Repository extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.shape({\r\n      params: PropTypes.shape({\r\n        repository: PropTypes.string,\r\n      }),\r\n\r\n    }).isRequired,\r\n  \r\n  }\r\n\r\n  state = {\r\n    repository: {},\r\n    issues: [],\r\n    loading: true,\r\n  }\r\n\r\n\r\n  async componentDidMount(){\r\n    const { match } = this.props; \r\n    const repoName = decodeURIComponent(match.params.repository);\r\n\r\n    const [repository, issues] = await Promise.all([\r\n      api.get(`http://api.github.com/repos/${repoName}`),\r\n      api.get(`http://api.github.com/repos/${repoName}/issues`), {\r\n        params: {\r\n          state: 'open',\r\n          per_page: 5,\r\n        }\r\n      }\r\n    ]);\r\n\r\n    this.setState({\r\n      repository: repository.data,\r\n      loading: false,\r\n      issues: issues.data,\r\n    })\r\n  } \r\n  \r\n  render(){\r\n    const { repository, issues, loading} = this.state\r\n\r\n    if(loading){\r\n      return <Loading> Carregando </Loading>;\r\n    }\r\n\r\n    return (\r\n      <Container>\r\n        <Owner>\r\n          <Link to=\"/\">Voltar aos repositórios</Link>\r\n          <img src={repository.owner.avatar_url} alt={repository.owner.login}></img>\r\n          <h1>{repository.name}</h1>\r\n          <p>{repository.description}</p>\r\n        </Owner>\r\n\r\n        <IssueList>\r\n          {issues.map(issue =>(\r\n            <li key={String(issue.id)}>\r\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\r\n              <div> \r\n                <strong>\r\n                  <a href={issue.html_url}>{issue.title}</a>\r\n                  {/* label */}\r\n                </strong>\r\n              </div>\r\n            </li>\r\n\r\n          ))}\r\n\r\n\r\n        </IssueList>\r\n\r\n      </Container>\r\n    )  \r\n}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}